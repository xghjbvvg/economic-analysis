# -*- coding:utf-8 -*-
# /usr/bin/env python
"""
Date: 2020/3/22 15:39
Desc: 东方财富网-数据中心-研究报告-东方财富分析师指数
http://data.eastmoney.com/invest/invest/list.html
"""
import requests
import pandas as pd
import json


def stock_em_analyst_rank():
    """
    东方财富网-数据中心-研究报告-东方财富分析师指数-东方财富分析师指数2020最新排行
    :return: 东方财富分析师指数2020最新排行
    :rtype: pandas.DataFrame
    """
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
    }
    url = "http://data.eastmoney.com/dataapi/invest/data?st=2020&sr=1&p=1&ps=75&name=&type=list&industrycode=all&pageNo=&pageNum="
    params = {
        # "st": "0",
        # "sr": "1",
        # "p": "1",
        # "ps": "50",
        # "js": "nPqXnjcx",
        # "type": "list",
        # "industrycode":"all",
        # "name": "",
        # "rt": "52828756",
    }
    r = requests.get(url, params=params, headers=headers)
    data_json = json.loads(r.text.strip("var nPqXnjcx ="))["data"];

    data_df = pd.DataFrame(data_json)
    result_df = data_df[
        [
            "LastYearIndex",
            # 2020年收益率
            "LastYearSyl",
            # 股票名称
            "StockName",
            # 姓名
            "FxsName",
            # 单位
            "Ssjg",
            # 年度指数
            "NewIndex",
            # 3个月收益率
            "Earnings_3",
            # 6个月收益率
            "Earnings_6",
            # 12个月收益率
            "Earnings_12",
            # 2020最新个股评级
            "NewGgpj",

            "Jyrq",
            "JyrqStr",
            # code
            "FxsCode",
            # 成分股个数
            "CfgGs",
            # 成分股个数
            "stockcount",
            # 股票代码
            "Industrycode",
        ]
    ]
    return result_df;


def stock_em_analyst_detail(
    analyst_id: str = "11000257131", indicator: str = "最新跟踪成分股"
) -> pd.DataFrame:
    """
    东方财富网-数据中心-研究报告-东方财富分析师指数-东方财富分析师指数2020最新排行-分析师详情
    :param analyst_id: 分析师ID, 从 stock_em_analyst_rank 获取
    :type analyst_id: str
    :param indicator: ["最新跟踪成分股", "历史跟踪成分股", "历史指数"]
    :type indicator: str
    :return: 具体指标的数据
    :rtype: pandas.DataFrame
    """
    headers = {
        "Host": "data.eastmoney.com",
        "Proxy - Connection": "keep - alive",
        "Cookie":"qgqp_b_id=f06f8932fbad9830ddd3ed6b3f16fc12; st_si=08384111467840; p_origin=https%3A%2F%2Fpassport2.eastmoney.com; ct=Tz3NSVsLW6RrCGTfQYEJseThIM5IPc1-0oCImLweymxHkPDeTI48Be5mrXxfMmGthmP_OsCU65jfERinBvVwucOYHTjTm76geLJDPlGA02cXB3OcmjAa0BIDjV3gj4KM7x9uCp7zbgjoSjAlvyFTYNEVeIexmvQSBUvDXut3R-Y; ut=FobyicMgeV4UajlknejRIu5tzLRBhVOQz24pawosnJ_Del8A68LfoeL8QE7RzD9yG4EaN_Hl04f8kpd-4ejirFB_NTjnlT1VKLMPRk-RbRwBZ5S3EuSZqiJ4wWIL3Hi52_u6FyY0YlLI0G0Ag_kZQhVq_seMLMIqwV9iklWS2_XJQqmymTJx-k8vdAcRtPTPAbLew9GAqZgBb35V1afCs8CV9BPM-8T9TkieaAZMalfBQsJcXixFqRJYJfOl1FWrpzuVNh9v88jY3AFe0puk-RzhJErP9rWX; pi=5868316047173388%3bs5868316047173388%3b%e8%82%a1%e5%8f%8bgxg9vr%3bDrFpdngbn0asbHMnLvTa%2bXv0a77rlIlSLiaQT%2fZsm1CwId8xmbRupq46p9j2M3HKlbfo%2bspiA164UlwIWwcz6nNZ6WM3%2fT8O5HkqGFTl%2f00%2bMU1E8W6DDGKInwwlxzLSDinrCpYlZ2gx5h38KfybxbaYZYQRkAIJTkLyQPVwmn5RiulI%2bX4X4Okfc2V1Ql8vs%2bEJWtAm%3bG7us4L7FTeyitbdzAX2uh1Vs%2b2rdNC5uTepLK%2fEYU1Ehhv%2bpXP4mgHKFXD8PX6x6QK4Rqlyf4yinrufxq9%2bGR%2f6lqHamH%2blPur%2ftHQifIaisx%2bXbTOD5e08QV4HYQ%2bsrCRWw%2bhpgAL4wa5AKSLMHkH5pdsyo4Q%3d%3d; uidal=5868316047173388%e8%82%a1%e5%8f%8bgxg9vr; sid=153157259; vtpst=%7c; _qddaz=QD.rr15cv.jowjul.kh73d3k0; pgv_pvi=6811646976; pgv_si=s4704111616; dRecords=%u6CAA%u6DF1%u6E2F%u901A%u6301%u80A1%7Chttp%3A//data.eastmoney.com/hsgtcg/%2C*%u6700%u65B0%u4E1A%u7EE9%u62A5%u8868%7Chttp%3A//data.eastmoney.com/bbsj/; intellpositionL=1068px; cowminicookie=true; st_asi=delete; cowCookie=true; st_pvi=00647524256448; st_sp=2020-11-07%2010%3A46%3A22; st_inirUrl=https%3A%2F%2Fwww.google.com%2F; st_sn=17; st_psi=20201128081302438-113300301624-2827663713; intellpositionT=955px",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36"
    }
    url = f"http://data.eastmoney.com/dataapi/invest/other?href=/api/Zgfxzs/json/AnalysisIndexNew.aspx&index=1&size=100&code=11000200926http://data.eastmoney.com/dataapi/invest/other?href=/api/Zgfxzs/json/AnalysisIndexNew.aspx&index=1&size=100&code=11000200926"
    r = requests.get(url, headers=headers);
    current_stock_df = pd.read_html(r.text)[0]
    history_stock_df = pd.read_html(r.text)[1]
    if indicator == "最新跟踪成分股":
        return current_stock_df
    elif indicator == "历史跟踪成分股":
        return history_stock_df
    elif indicator == "历史指数":
        url = "http://data.eastmoney.com/DataCenter_V3/chart/AnalystsIndex.ashx"
        params = {
            "code": f"{analyst_id}",
            "r": "0.5281549337680276",
            "isxml": "false",
        }
        r = requests.get(url, params=params, headers=headers)
        data_json = r.json()
        data_df = pd.DataFrame(
            [data_json["X"].split(","), data_json["Y"][0].split(",")],
            index=["date", "value"],
        ).T
        return data_df


if __name__ == "__main__":
    stock_em_analyst_rank_df = stock_em_analyst_rank()
    print(stock_em_analyst_rank_df)
    stock_em_analyst_detail_current_stock_df = stock_em_analyst_detail(
        analyst_id="11000257131", indicator="最新跟踪成分股"
    )
    print(stock_em_analyst_detail_current_stock_df)
    stock_em_analyst_detail_history_stock_df = stock_em_analyst_detail(
        analyst_id="11000257131", indicator="历史跟踪成分股"
    )
    print(stock_em_analyst_detail_history_stock_df)
    stock_em_analyst_detail_index_df = stock_em_analyst_detail(
        analyst_id="11000257131", indicator="历史指数"
    )
    print(stock_em_analyst_detail_index_df)
